#!usr/bin/python3
import datetime
import time
import hashlib
import string
import os
import random
import requests
import re


from flask import Flask, request
import peewee as pw
import telebot

from database import KarmaUser, Limitation
from logger import main_log
from telebot import types
import config

main_log.info("Program starting")
TELEGRAM_API = os.environ["telegram_token"]
bot = telebot.TeleBot(TELEGRAM_API)


def is_my_message(msg):
	"""
	–§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, –∫–∞–∫–æ–º—É –±–æ—Ç—É –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.
	–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –Ω–µ —Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –¥—Ä—É–≥–∏—Ö –±–æ—Ç–æ–≤.
	:param msg: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ –ø—Ä–æ–≤–æ–¥–∏—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∫–∞.
	"""
	text = msg.text.split()[0].split("@")
	if len(text) > 1:
		if text[1] != config.bot_name:
			return False
	return True
	
def reply_exist(msg):
	return msg.reply_to_message

@bot.message_handler(commands=["start"], func=is_my_message)
def start(msg):
	"""
	–§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ-–∫–æ–º–∞–Ω–¥—É –¥–ª—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
	:param msg: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è-–∫–æ–º–∞–Ω–¥—ã
	"""
	reply_text = (
			"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —è –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ " +
			" –ø–æ–¥—Å—á–µ—Ç –∫–∞—Ä–º—ã –≤ —á–∞—Ç–µ @khvchat.")
	bot.send_message(msg.chat.id, reply_text)


@bot.message_handler(commands=["h","help"], func=is_my_message)
def helps(msg):
	"""
	–§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–ø–∏—Å–∫–∞ –æ–±—â–µ–¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –¥–ª—è –±–æ—Ç–∞
	:param msg: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è-–∫–æ–º–∞–Ω–¥—ã
	"""


	help_mess = "<b>–•–∞–±–ß–∞—Ç</b> - —á–∞—Ç –≥–æ—Ä–æ–¥–∞ –•–∞–±–∞—Ä–æ–≤—Å–∫–∞.\
	\n\n‚ÑπÔ∏è –í—ã—Ä–∞–∂–µ–Ω–∏—è –ø–æ—Ö–≤–∞–ª—ã –∏ –æ–±—â–µ–Ω–∏–µ –≤ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–º –∫–ª—é—á–µ –ø–æ–≤—ã—à–∞—é—Ç –∫–∞—Ä–º—É, —Ä—É–≥–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –ø–æ–Ω–∏–∂–∞—é—Ç.\
	\n\n<b>–ö–æ–º–∞–Ω–¥—ã:</b>\
	\n/h - –°–ø—Ä–∞–≤–∫–∞\
	\n/weather - –ü–æ–≥–æ–¥–∞\
	\n/no - –î–ª—è –æ–±—ä—è–≤–ª–µ–Ω–∏–π\
	\n/report - –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∂–∞–ª–æ–±—É\
	\n/croco - –ò–≥—Ä–∞ –≤ –ö—Ä–æ–∫–æ–¥–∏–ª\
	\n\n<b>/—É—Ç—Ä–∞ /—Ü–∏—Ç–∞—Ç–∞ /–¥–∞—Ç–∞ /–ø–æ–≥–æ–¥–∞ /–∫–æ—Ç /—à—É—Ç–∫–∞ /? /—Å–æ—Ö—Ä–∞–Ω–∏—Ç—å /–ø—Ä–∏–≤–µ—Ç /—Ñ—Å–± /—Ñ–æ—Ç–æ /–±–∞–Ω</b> - –û—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ\
	\n\n<b>–ö–∞—Ä–º–∞:</b>\
	\n/my - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ—é –∫–∞—Ä–º—É\
	\n/top - –£–∑–Ω–∞—Ç—å –Ω–∞–∏–±–æ–ª–µ–µ –±–ª–∞–≥–æ–¥–∞—Ä–∏–º—ã—Ö –≤ —á–∞—Ç–µ\
	\n/gift - –ü–æ–¥–∞—Ä–∏—Ç—å +5 –∫–∞—Ä–º—É\
	\n/freez - –ó–∞–º–æ—Ä–æ–∑–∫–∞ –∫–∞—Ä–º—ã\
	\n/unfreez - –†–∞–∑–º–æ—Ä–æ–∑–∫–∞\
	\n<b>/—Ç–∏–Ω–¥–µ—Ä</b> - –ù–∞–π—Ç–∏ –ø–∞—Ä—É\
	\n<b>üé≤üé∞üèÄüé≥‚öΩÔ∏è</b> - –†–∞–Ω–¥–æ–º –∫–∞—Ä–º—ã"
	
	bot.send_message(msg.chat.id, help_mess, parse_mode="HTML")
	bot.delete_message(msg.chat.id, msg.message_id)




		
		

		

def select_user(user, chat):
	"""
	–§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
	:param user: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –¥–∞–Ω–Ω—ã–µ –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã
	:param chat: —á–∞—Ç, –≤ –∫–æ—Ç–æ—Ä–æ–º –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å

	TODO –•–æ—Ç–µ–ª–æ—Å—å –±—ã –∏–∑–±–∞–≤–∏—Ç—å—Å—è –æ—Ç —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
	"""

	selected_user = KarmaUser.select().where(
		(KarmaUser.userid == user.id) &
		(KarmaUser.chatid == chat.id)).get()
	return selected_user


def insert_user(user, chat):
	"""
	–§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	:param user: –¥–∞–Ω–Ω—ã–µ –¥–æ–±–∞–≤–ª—è–µ–º–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	:param chat: —á–∞—Ç, –≤ –∫–æ—Ç–æ—Ä–æ–º –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å

	TODO –•–æ—Ç–µ–ª–æ—Å—å –±—ã –∏–∑–±–∞–≤–∏—Ç—å—Å—è –æ—Ç —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
	"""
	# 'user_name' —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –∏–º–µ–Ω–∏ –∏ —Ñ–∞–º–∏–ª–∏–∏. –ù–æ —Ä–∞–∑–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ —Ä–∞–∑–Ω–æ–º—É
	# –ø–æ–¥—Ö–æ–¥—è—Ç –∫ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—é —ç—Ç–∏—Ö –ø–æ–ª–µ–π –∏ –º–æ–≥—É—Ç –Ω–µ —É–∫–∞–∑–∞—Ç—å –∏–º—è –∏–ª–∏ —Ñ–∞–º–∏–ª–∏—é.
	# –ê –µ—Å–ª–∏ –∏–º—è –∏–ª–∏ —Ñ–∞–º–∏–ª–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç, —Ç–æ –æ–±—Ä–∞—â–µ–Ω–∏–µ –∫ –Ω–∏–º
	# –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 'None', –∞ –Ω–µ –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É. –° 'user_nick' —Ç–∞ –∂–µ —Å–∏—Ç—É–∞—Ü–∏—è.
	user_name = (user.first_name or "") + " " + (user.last_name or "")
	user_nick = user.username or ""

	new_user = KarmaUser.create(
				userid=user.id,
				chatid=chat.id,
				karma=0,
				user_name=user_name,
				user_nick=user_nick,
				is_freezed=False)
	new_user.save()


def change_karma(user, chat, result):
	"""
	–§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è –∫–∞—Ä–º—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	:param user: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –∫–æ—Ç–æ—Ä–æ–º—É –Ω—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –∫–∞—Ä–º—É
	:param chat: —á–∞—Ç, –≤ –∫–æ—Ç–æ—Ä–æ–º –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
	:param result: –Ω–∞ —Å–∫–æ–ª—å–∫–æ –Ω—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –∫–∞—Ä–º—É
	"""
	selected_user = KarmaUser.select().where(
		(KarmaUser.chatid == chat.id) &
		(KarmaUser.userid == user.id))

	if not selected_user:
		insert_user(user, chat)

	# 'user_name' —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –∏–º–µ–Ω–∏ –∏ —Ñ–∞–º–∏–ª–∏–∏. –ù–æ —Ä–∞–∑–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ —Ä–∞–∑–Ω–æ–º—É
	# –ø–æ–¥—Ö–æ–¥—è—Ç –∫ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—é —ç—Ç–∏—Ö –ø–æ–ª–µ–π –∏ –º–æ–≥—É—Ç –Ω–µ —É–∫–∞–∑–∞—Ç—å –∏–º—è –∏–ª–∏ —Ñ–∞–º–∏–ª–∏—é.
	# –ê –µ—Å–ª–∏ –∏–º—è –∏–ª–∏ —Ñ–∞–º–∏–ª–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç, —Ç–æ –æ–±—Ä–∞—â–µ–Ω–∏–µ –∫ –Ω–∏–º
	# –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 'None', –∞ –Ω–µ –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É. –° 'user_nick' —Ç–∞ –∂–µ —Å–∏—Ç—É–∞—Ü–∏—è.
	user_name = (user.first_name or "") + " " + (user.last_name or "")
	user_nick = user.username or ""



	update_user = KarmaUser.update(
							karma=(KarmaUser.karma + result),
							user_name=user_name,
							user_nick=user_nick
						).where(
							(KarmaUser.userid == user.id) &
							(KarmaUser.chatid == chat.id))
	update_user.execute()
	


    
@bot.message_handler(commands=["top"], func=is_my_message)
def top_best(msg):
	main_log.info("Starting func 'top_best'")
	"""
	–§—É–Ω–∫—Ü–∏—è –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –Ω–∞–π–±–æ–ª—å—à–∏–º –∑–Ω–∞—á–µ–Ω–∏–µ–º –∫–∞—Ä–º—ã
	:param msg: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è-–∫–æ–º–∞–Ω–¥—ã
	"""

	if len(msg.text.split()) == 1:
		result=10
	else:
		result = int(msg.text.split()[1])	
	selected_user = KarmaUser.select()\
		.where((KarmaUser.karma > 0) & (KarmaUser.chatid == msg.chat.id))\
		.order_by(KarmaUser.karma.desc())\
		.limit(result)
	user_rang = "ü§ñ –ë–æ—Ç"
	top_mess = "üìà –¢–æ–ø –±–ª–∞–≥–æ–¥–∞—Ä–∏–º—ã—Ö\n\n"
	for i, user in enumerate(selected_user):
		if user.user_name:
			name = user.user_name.strip()
		else:
			name = user.user_nick.strip()

		try:

			userstatus = bot.get_chat_member(msg.chat.id,user.userid)
			if userstatus.status == 'creator' or userstatus.status == 'member' or userstatus.status == 'administrator' or userstatus.status != 'left' or userstatus.status != 'kicked' or userstatus.status != 'restricted':
				if user.karma <= 9: user_rang = "ü§ñ\n      <code>–ë–æ—Ç</code>"
				if 10 <= user.karma < 20: user_rang = "ü§´\n      <code>–¢–∏—Ö–æ–Ω—è</code>"
				if 20 <= user.karma < 30: user_rang = "üêõ\n      <code>–õ–∏—á–∏–Ω–∫–∞</code>"
				if 30 <= user.karma < 40: user_rang = "üë§\n      <code>–ì–æ—Å—Ç—å</code>"
				if 40 <= user.karma < 50: user_rang = "üê§\n      <code>–ü—Ä–æ—Ö–æ–∂–∏–π</code>"
				if 50 <= user.karma < 60: user_rang = "üéó\n      <code>–ù–æ–≤–∏—á–æ–∫</code>"
				if 60 <= user.karma < 70: user_rang = "üî±\n      <code>–õ—é–±–æ–ø—ã—Ç–Ω—ã–π</code>"
				if 70 <= user.karma < 80: user_rang = "‚öúÔ∏è\n      <code>–°—Ç—Ä–∞–Ω–Ω–∏–∫</code>"
				if 80 <= user.karma < 90: user_rang = "‚ú®\n      <code>–ë—ã–≤–∞–ª—ã–π</code>"
				if 90 <= user.karma < 100: user_rang = "ü•â\n      <code>–ü–æ—Å—Ç–æ—è–ª–µ—Ü</code>"
				if 100 <= user.karma < 120: user_rang = "ü•à\n      <code>–ó–∞–≤—Å–µ–≥–¥–∞—Ç–∞–π</code>"
				if 120 <= user.karma < 150: user_rang = "ü•á\n      <code>–ú–µ—Å—Ç–Ω—ã–π –∂–∏—Ç–µ–ª—å</code>"
				if 150 <= user.karma < 200: user_rang = "üéñ\n      <code>–ì–æ—Ä–æ–¥–æ–≤–æ–π</code>"
				if 200 <= user.karma < 250: user_rang = "üèÖ\n      <code>–•–∞–±–∞—Ä–æ–≤—á–∞–Ω–∏–Ω</code>"
				if 250 <= user.karma < 300: user_rang = "‚≠êÔ∏è\n      <code>–•–∞–±–ê–∫—Ç–∏–≤–∏—Å—Ç</code>"
				if 300 <= user.karma < 350: user_rang = "üåü\n      <code>–î–∞–ª—å–Ω–µ–≤–æ—Å—Ç–æ—á–Ω–∏–∫</code>"
				if 350 <= user.karma < 400: user_rang = "üèµ\n      <code>–°—Ç–∞—Ä–æ–∂–∏–ª</code>"
				if 400 <= user.karma < 450: user_rang = "üí´\n      <code>–°—Ç–∞–ª–∫–µ—Ä</code>"
				if 450 <= user.karma < 500: user_rang = "üí•\n      <code>–í–µ—Ç–µ—Ä–∞–Ω</code>"
				if 500 <= user.karma < 550: user_rang = "üé≠\n      <code>–§–∏–ª–æ—Å–æ—Ñ</code>"
				if 550 <= user.karma < 600: user_rang = "üéì\n      <code>–ú—ã—Å–ª–∏—Ç–µ–ª—å</code>"
				if 600 <= user.karma < 650: user_rang = "üõ†\n      <code>–ú–∞—Å—Ç–µ—Ä</code>"
				if 650 <= user.karma < 700: user_rang = "‚òÄÔ∏è\n      <code>–°–ø–µ—Ü</code>"
				if 700 <= user.karma < 750: user_rang = "üîÆ\n      <code>–û—Ä–∞–∫—É–ª</code>"
				if 750 <= user.karma < 800: user_rang = "üèÜ\n      <code>–ì—É—Ä—É</code>"
				if 800 <= user.karma < 850: user_rang = "üëë\n      <code>–≠–ª–∏—Ç–∞</code>"
				if 850 <= user.karma < 900: user_rang = "üß†\n      <code>–ú—É–¥—Ä–µ—Ü</code>"
				if 900 <= user.karma < 1000: user_rang = "üëÅ\n      <code>–°–º–æ—Ç—Ä–∏—Ç–µ–ª—å</code>"
				if 1000 <= user.karma < 1200: user_rang = "üèπ\n      <code>–í–æ–∂–¥—å</code>"
				if 1200 <= user.karma < 1500: user_rang = "‚úùÔ∏è\n      <code>–ë–æ–≥</code>"
				if 1500 <= user.karma < 2800: user_rang = "‚ö°Ô∏è\n      <code>–í–µ—Ä—Ö–æ–≤–Ω—ã–π –ë–æ–≥</code>"
				if 1800 <= user.karma < 2000: user_rang = "‚ö°‚ö°Ô∏èÔ∏èÔ∏è\n      <code>–ü–∞–Ω—Ç–µ–æ–Ω</code>"
				if user.karma > 2000: user_rang = "üë§\n      <code>–°–ª–æ–º–∞–ª —Å–∏—Å—Ç–µ–º—É</code>"
				if userstatus.status == 'left' or userstatus.status == 'kicked' or userstatus.status == 'restricted':
					user_rang = "üíÄÔ∏èÔ∏èÔ∏è\n      <code>–í—ã–±—ã–ª</code>"
#					change_karma(user, msg.chat, -user.karma)
					update_user = KarmaUser.update(
							karma=(0),
							user_name=user.user_name.strip(),
							user_nick=user.user_nick.strip()
						).where(
							(KarmaUser.userid == user.userid) &
							(KarmaUser.chatid == msg.chat.id))
					update_user.execute()
			

				top_mess += f"{i+1}. <b>{name}</b> ({user.karma}) {user_rang}\n"

		except Exception:
				top_mess += f"{i+1}. <b>{name}</b> ({user.karma}) üóë\n      <code>–£–¥–∞–ª–µ–Ω–Ω—ã–π</code>\n"
				update_user = KarmaUser.update(
							karma=(0),
							user_name=user.user_name.strip(),
							user_nick=user.user_nick.strip()
						).where(
							(KarmaUser.userid == user.userid) &
							(KarmaUser.chatid == msg.chat.id))
				update_user.execute()
#				change_karma(user, msg.chat, -user.karma)

#				userstatus = bot.get_chat_member(msg.chat.id,user.userid)
#				change_karma(userstatus.user, msg.chat, -100)
	if not selected_user:
		top_mess = "–ù–∏–∫—Ç–æ –µ—â–µ –Ω–µ –∑–∞—Å–ª—É–∂–∏–ª –±—ã—Ç—å –≤ —ç—Ç–æ–º —Å–ø–∏—Å–∫–µ."
	bot.send_message(msg.chat.id, top_mess, parse_mode="HTML")
	bot.delete_message(msg.chat.id, msg.message_id)

	

	


@bot.message_handler(commands=["send"], func=is_my_message)
def send(msg):
	"""
	–§—É–Ω–∫—Ü–∏—è –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –Ω–∞–π–º–µ–Ω—å—à–∏–º –∑–Ω–∞—á–µ–Ω–∏–µ–º –∫–∞—Ä–º—ã
	:param msg: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è-–∫–æ–º–∞–Ω–¥—ã
	"""
	selected_user = KarmaUser.select() \
		.where((KarmaUser.karma > 400))\
		.order_by(KarmaUser.karma.desc())\
		.limit(10)

	for i, user in enumerate(selected_user):
		try:
			if i % 20 == 0:
				time.sleep(1)
			bot.send_message(user.userid, "–¢–µ—Å—Ç —Ä–∞—Å—Å—ã–ª–∫–∏ –æ—Ç @khvchat", parse_mode="HTML" )
		except:
			continue
	


def is_karma_changing(text):
	result = []
	# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–∞—Ä–º—ã –ø–æ —Å–º–∞–π–ª–∏–∫–∞–º
	if len(text) == 1:
		if text in config.good_emoji:
			result.append(1)
		if text in config.bad_emoji:
			result.append(-1)
		return result

	# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
	text = text.lower()
	for punc in string.punctuation:
		text = text.replace(punc, "")
	for white in string.whitespace[1:]:
		text = text.replace(white, "")

	# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–∞—Ä–º—ã –ø–æ —Ç–µ–∫—Å—Ç—É —Å–æ–æ–±—â–µ–Ω–∏—è
	for word in config.good_words:
		if word == text \
				or (" "+word+" " in text) \
				or text.startswith(word) \
				or text.endswith(word):
			result.append(1)

	for word in config.bad_words:
		if word in text \
				or (" "+word+" " in text) \
				or text.startswith(word) \
				or text.endswith(word):
			result.append(-1)
		
			
	return result
	
def is_karma_changing_mat(text):
	result = []
		
	if len(text)==1:
		result.append(-1)

			# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
	text = text.lower()
	for punc in string.punctuation:
		text = text.replace(punc, "")
	for white in string.whitespace[1:]:
		text = text.replace(white, "")
		
	for word in config.mat_words:
		if word in text \
				or (" "+word+" " in text) \
				or text.startswith(word) \
				or text.endswith(word):
			result.append(-1)
	if len(text.split()) > 2:
		for word in config.heppy_words:
			if word in text \
					or (" "+word+" " in text) \
					or text.startswith(word) \
					or text.endswith(word):
				result.append(1)
			

	return result

	
	
  
def reputation(msg, text):
	""" TODO """

	# –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ–ª—å—à–æ–µ, —Ç–æ –ø—Ä–µ—Ä–≤–∞—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
	if len(text) > 100:
		return

	# –ï—Å–ª–∏ –∫–∞—Ä–º—É –Ω–µ –ø—ã—Ç–∞—é—Ç—Å—è –∏–∑–º–µ–Ω–∏—Ç—å, —Ç–æ –ø—Ä–µ—Ä–≤–∞—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
	how_much_changed = is_karma_changing(text)
	if not how_much_changed:
		return

	# –ü—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –ø–æ–¥–Ω—è—Ç—å –∫–∞—Ä–º—É —Å–∞–º–æ–º—É —Å–µ–±–µ –ø—Ä–µ—Ä–≤–∞—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
	if msg.from_user.id == msg.reply_to_message.from_user.id:
		bot.send_message(msg.chat.id, "–ù–µ–ª—å–∑—è –∏–∑–º–µ–Ω—è—Ç—å –∫–∞—Ä–º—É —Å–∞–º–æ–º—É —Å–µ–±–µ.")
		return

	# –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∫–∞—Ä–º—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–æ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –ø—Ä–æ–º–µ–∂—É—Ç–æ–∫
	if is_karma_abuse(msg):
		return

	if is_karma_freezed(msg):
		return
		
	# –ï—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –∫–∞—Ä–º—ã –≤—Å–µ –∂–µ –º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å: –∏–∑–º–µ–Ω—è–µ–º
	result = sum(how_much_changed)
	if result != 0:
		Limitation.create(
			timer=pw.SQL("current_timestamp"),
			userid=msg.from_user.id,
			chatid=msg.chat.id)
		change_karma(msg.reply_to_message.from_user, msg.chat, result)

	if result > 0:
		res = "–ø–æ–≤—ã—à–µ–Ω–∞ ‚¨ÜÔ∏è"
	elif result < 0:
		res = "–ø–æ–Ω–∏–∂–µ–Ω–∞ ‚¨áÔ∏è"
	else:
		res = "–Ω–µ –∏–∑–º–µ–Ω–µ–Ω–∞"

	user = KarmaUser.select().where(
		(KarmaUser.userid == msg.reply_to_message.from_user.id) &
		(KarmaUser.chatid == msg.chat.id)).get()

	if not user.user_name.isspace():
		name = user.user_name.strip()
	else:
		name = user.user_nick.strip()
		
	if name == "Telegram" or name == "–•–∞–±–ö–∞—Ä–º–∞":
		return

	now_karma = f"–ö–∞—Ä–º–∞ {res}\n{name}: <b>{user.karma}</b>."
	bot.send_message(msg.chat.id, now_karma, parse_mode="HTML")

def reputation_mat(msg, text):
	""" TODO –ø–æ–Ω–∏–∂–µ–Ω–∏–µ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏ –∑–∞ –º–∞—Ç—ã"""
	
	how_much_changed = is_karma_changing_mat(text)
	if not how_much_changed:
		return
	# –ï—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –∫–∞—Ä–º—ã –≤—Å–µ –∂–µ –º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å: –∏–∑–º–µ–Ω—è–µ–º
	result = sum(how_much_changed)
	if result != 0:
		change_karma(msg.from_user, msg.chat, result)
		

@bot.message_handler(content_types=["text"], func=reply_exist)
def changing_karma_text(msg):
	if msg.chat.type == "private":
		return
	reputation(msg, msg.text)
	reputation_mat(msg, msg.text)
	commands(msg, msg.text)


	

				



# bot.polling(none_stop=True)


# –î–∞–ª—å–Ω–µ–π—à–∏–π –∫–æ–¥ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏ —É–¥–∞–ª–µ–Ω–∏—è –≤–µ–±—Ö—É–∫–æ–≤
server = Flask(__name__)


@server.route("/bot", methods=['POST'])
def get_message():
	""" TODO """
	decode_json = request.stream.read().decode("utf-8")
	bot.process_new_updates([telebot.types.Update.de_json(decode_json)])
	return "!", 200


@server.route("/")
def webhook_add():
	""" TODO """
	bot.remove_webhook()
	bot.set_webhook(url=config.url)
	return "!", 200

@server.route("/<password>")
def webhook_rem(password):
	""" TODO """
	password_hash = hashlib.md5(bytes(password, encoding="utf-8")).hexdigest()
	if password_hash == "5b4ae01462b2930e129e31636e2fdb68":
		bot.remove_webhook()
		return "Webhook removed", 200
	else:
		return "Invalid password", 200


server.run(host="0.0.0.0", port=int(os.environ.get('PORT', 5000)))
