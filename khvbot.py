#!usr/bin/python3
import datetime
import time
import hashlib
import string
import os
import random
import requests
import re
import bs4

from flask import Flask, request
import peewee as pw
import telebot

from database import KarmaUser, Limitation
from logger import main_log
from telebot import types
import config

main_log.info("Program starting")
TELEGRAM_API = os.environ["telegram_token"]
bot = telebot.TeleBot(TELEGRAM_API)

saves_database = {}
database="croco"
database_id=0
message_id_del="111111"
message_id_del2="2"
database_time="3333"
change_croco_2=2
database_id_mute=2
database_id_time=0

def is_my_message(msg):
	"""
	–§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, –∫–∞–∫–æ–º—É –±–æ—Ç—É –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.
	–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –Ω–µ —Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –¥—Ä—É–≥–∏—Ö –±–æ—Ç–æ–≤.
	:param msg: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ –ø—Ä–æ–≤–æ–¥–∏—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∫–∞.
	"""
	if msg.chat.type == "private":
		return
	text = msg.text.split()[0].split("@")
	if len(text) > 1:
		if text[1] != config.bot_name:
			return False
	return True
	
def reply_exist(msg):
	return msg.reply_to_message

@bot.message_handler(commands=["start"], func=is_my_message)
def start(msg):
	"""
	–§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ-–∫–æ–º–∞–Ω–¥—É –¥–ª—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
	:param msg: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è-–∫–æ–º–∞–Ω–¥—ã
	"""
	reply_text = (
			"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —è –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ " +
			" –ø–æ–¥—Å—á–µ—Ç –∫–∞—Ä–º—ã –≤ —á–∞—Ç–µ @khvchat.")
	bot.send_message(msg.chat.id, reply_text)


@bot.message_handler(commands=["h","help"], func=is_my_message)
def helps(msg):
	"""
	–§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–ø–∏—Å–∫–∞ –æ–±—â–µ–¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –¥–ª—è –±–æ—Ç–∞
	:param msg: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è-–∫–æ–º–∞–Ω–¥—ã
	"""


	help_mess = "<b>–•–∞–±–ß–∞—Ç</b> - —á–∞—Ç –≥–æ—Ä–æ–¥–∞ –•–∞–±–∞—Ä–æ–≤—Å–∫–∞.\
	\n\n‚ÑπÔ∏è –í—ã—Ä–∞–∂–µ–Ω–∏—è –ø–æ—Ö–≤–∞–ª—ã –∏ –æ–±—â–µ–Ω–∏–µ –≤ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–º –∫–ª—é—á–µ –ø–æ–≤—ã—à–∞—é—Ç –∫–∞—Ä–º—É, —Ä—É–≥–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –ø–æ–Ω–∏–∂–∞—é—Ç.\
	\n\n<b>–ö–æ–º–∞–Ω–¥—ã:</b>\
	\n/h - –°–ø—Ä–∞–≤–∫–∞\
	\n/weather - –ü–æ–≥–æ–¥–∞\
	\n/no - –î–ª—è –æ–±—ä—è–≤–ª–µ–Ω–∏–π\
	\n/report - –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∂–∞–ª–æ–±—É\
	\n/croco - –ò–≥—Ä–∞ –≤ –ö—Ä–æ–∫–æ–¥–∏–ª\
	\n\n<b>/—É—Ç—Ä–∞ /—Ü–∏—Ç–∞—Ç–∞ /–¥–∞—Ç–∞ /–ø–æ–≥–æ–¥–∞ /–∫–æ—Ç /—à—É—Ç–∫–∞ /? /—Å–æ—Ö—Ä–∞–Ω–∏—Ç—å /–ø—Ä–∏–≤–µ—Ç /—Ñ—Å–± /—Ñ–æ—Ç–æ /–±–∞–Ω</b> - –û—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ\
	\n\n<b>–ö–∞—Ä–º–∞:</b>\
	\n/my - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ—é –∫–∞—Ä–º—É\
	\n/top - –£–∑–Ω–∞—Ç—å –Ω–∞–∏–±–æ–ª–µ–µ –±–ª–∞–≥–æ–¥–∞—Ä–∏–º—ã—Ö –≤ —á–∞—Ç–µ\
	\n/gift - –ü–æ–¥–∞—Ä–∏—Ç—å +5 –∫–∞—Ä–º—É\
	\n/freez - –ó–∞–º–æ—Ä–æ–∑–∫–∞ –∫–∞—Ä–º—ã\
	\n/unfreez - –†–∞–∑–º–æ—Ä–æ–∑–∫–∞\
	\n<b>/—Ç–∏–Ω–¥–µ—Ä</b> - –ù–∞–π—Ç–∏ –ø–∞—Ä—É\
	\n<b>üé≤üé∞üèÄüé≥‚öΩÔ∏è</b> - –†–∞–Ω–¥–æ–º –∫–∞—Ä–º—ã"
	
	bot.send_message(msg.chat.id, help_mess, parse_mode="HTML")
	bot.delete_message(msg.chat.id, msg.message_id)

@bot.message_handler(commands=["weather","–ø–æ–≥–æ–¥–∞"], func=is_my_message)
def weather(msg):
	"""
	–§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –ø–æ –∑–∞–ø—Ä–æ—Å—É –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ –≥–∏—Ç—Ö–∞–±-—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π,
	–≤ –∫–æ—Ç–æ—Ä–æ–º —Ö—Ä–∞–Ω–∏—Ç—Å—è –∏—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ –±–æ—Ç–∞
	:param msg: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è-–∫–æ–º–∞–Ω–¥—ã
	"""
	a = datetime.datetime.today()
	bot.reply_to(msg, f"<a href='https://khabara.ru/weather.html?{a}'>üå°</a>", parse_mode="HTML")
	bot.delete_message(msg.chat.id, msg.message_id)
	
	
@bot.message_handler(commands=["news"], func=is_my_message)
def news_khv(msg):
	a = datetime.datetime.today()
	bot.reply_to(msg, f"<a href='https://khabara.ru/rss.html?{a}'>üì∞</a>", parse_mode="HTML")
	bot.delete_message(msg.chat.id, msg.message_id)
	
@bot.message_handler(commands=["tg"], func=is_my_message)
def tg_group(msg):
	bot.reply_to(msg, "<a href='https://t.me/khv_news/6203'>üîó</a>", parse_mode="HTML")
	bot.delete_message(msg.chat.id, msg.message_id)
	
@bot.message_handler(commands=["report"], func=is_my_message)
def report(msg):
	"""
	–§—É–Ω–∫—Ü–∏—è, –¥–ª—è –∂–∞–ª–æ–± –∞–¥–º–∏–Ω–∞–º
	"""    
	report_text = f"‚ö†Ô∏è –ñ–∞–ª–æ–±–∞ –æ—Ç <b>{msg.from_user.first_name}</b> –ø–æ–ª—É—á–µ–Ω–∞! \
	\n–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–æ–≤: " + config.adminschat
	bot.reply_to(msg, report_text, parse_mode="HTML")
	bot.delete_message(msg.chat.id, msg.message_id)
	
@bot.message_handler(commands=["no"], func=is_my_message)
def nos(msg):
	"""
	–§—É–Ω–∫—Ü–∏—è, –¥–ª—è –º–∞—Ä–∫–µ—Ç–∞
	"""
	nos_text = "‚ÑπÔ∏è –ó–¥–µ—Å—å –ß–∞—Ç –æ–±—â–µ–Ω–∏—è, –¥–ª—è –æ–±—ä—è–≤–ª–µ–Ω–∏–π –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –≥—Ä—É–ø–ø–∞–º–∏: @market27 –∏–ª–∏ @khvjob"
	user = bot.get_chat_member(msg.chat.id, msg.from_user.id)
	if msg.reply_to_message:
		bot.reply_to(msg.reply_to_message,nos_text)
		if user.status == 'administrator' or user.status == 'creator':
			bot.delete_message(msg.chat.id, msg.reply_to_message.message_id)

	else:
		bot.reply_to(msg,nos_text)
	bot.delete_message(msg.chat.id, msg.message_id)


@bot.message_handler(commands=["love"], func=is_my_message)
def love(msg):
	if msg.reply_to_message:
		bot.reply_to(msg.reply_to_message, "<a href='tg://user?id=55910350'>‚ù§</a>Ô∏è –ó–Ω–∞–∫–æ–º—Å—Ç–≤–∞ –≤ –•–∞–±–∞—Ä–æ–≤—Å–∫–µ: @love_khv", parse_mode="HTML")
		return
	if len(msg.text.split()) == 1:
		bot.delete_message(msg.chat.id, msg.message_id)
		return
	bot.reply_to(msg, "<a href='tg://user?id=55910350'>‚ù§</a>Ô∏è –£—Å–ª–æ–≤–∏—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ –ó–Ω–∞–∫–æ–º—Å—Ç–≤–∞—Ö: @love_khv", parse_mode="HTML")
		
		

		

def select_user(user, chat):
	"""
	–§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
	:param user: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –¥–∞–Ω–Ω—ã–µ –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã
	:param chat: —á–∞—Ç, –≤ –∫–æ—Ç–æ—Ä–æ–º –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å

	TODO –•–æ—Ç–µ–ª–æ—Å—å –±—ã –∏–∑–±–∞–≤–∏—Ç—å—Å—è –æ—Ç —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
	"""

	selected_user = KarmaUser.select().where(
		(KarmaUser.userid == user.id) &
		(KarmaUser.chatid == chat.id)).get()
	return selected_user


def insert_user(user, chat):
	"""
	–§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	:param user: –¥–∞–Ω–Ω—ã–µ –¥–æ–±–∞–≤–ª—è–µ–º–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	:param chat: —á–∞—Ç, –≤ –∫–æ—Ç–æ—Ä–æ–º –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å

	TODO –•–æ—Ç–µ–ª–æ—Å—å –±—ã –∏–∑–±–∞–≤–∏—Ç—å—Å—è –æ—Ç —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
	"""
	# 'user_name' —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –∏–º–µ–Ω–∏ –∏ —Ñ–∞–º–∏–ª–∏–∏. –ù–æ —Ä–∞–∑–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ —Ä–∞–∑–Ω–æ–º—É
	# –ø–æ–¥—Ö–æ–¥—è—Ç –∫ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—é —ç—Ç–∏—Ö –ø–æ–ª–µ–π –∏ –º–æ–≥—É—Ç –Ω–µ —É–∫–∞–∑–∞—Ç—å –∏–º—è –∏–ª–∏ —Ñ–∞–º–∏–ª–∏—é.
	# –ê –µ—Å–ª–∏ –∏–º—è –∏–ª–∏ —Ñ–∞–º–∏–ª–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç, —Ç–æ –æ–±—Ä–∞—â–µ–Ω–∏–µ –∫ –Ω–∏–º
	# –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 'None', –∞ –Ω–µ –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É. –° 'user_nick' —Ç–∞ –∂–µ —Å–∏—Ç—É–∞—Ü–∏—è.
	user_name = (user.first_name or "") + " " + (user.last_name or "")
	user_nick = user.username or ""

	new_user = KarmaUser.create(
				userid=user.id,
				chatid=chat.id,
				karma=0,
				user_name=user_name,
				user_nick=user_nick,
				is_freezed=False)
	new_user.save()


def change_karma(user, chat, result):
	"""
	–§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è –∫–∞—Ä–º—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	:param user: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –∫–æ—Ç–æ—Ä–æ–º—É –Ω—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –∫–∞—Ä–º—É
	:param chat: —á–∞—Ç, –≤ –∫–æ—Ç–æ—Ä–æ–º –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
	:param result: –Ω–∞ —Å–∫–æ–ª—å–∫–æ –Ω—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –∫–∞—Ä–º—É
	"""
	selected_user = KarmaUser.select().where(
		(KarmaUser.chatid == chat.id) &
		(KarmaUser.userid == user.id))

	if not selected_user:
		insert_user(user, chat)

	# 'user_name' —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –∏–º–µ–Ω–∏ –∏ —Ñ–∞–º–∏–ª–∏–∏. –ù–æ —Ä–∞–∑–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ —Ä–∞–∑–Ω–æ–º—É
	# –ø–æ–¥—Ö–æ–¥—è—Ç –∫ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—é —ç—Ç–∏—Ö –ø–æ–ª–µ–π –∏ –º–æ–≥—É—Ç –Ω–µ —É–∫–∞–∑–∞—Ç—å –∏–º—è –∏–ª–∏ —Ñ–∞–º–∏–ª–∏—é.
	# –ê –µ—Å–ª–∏ –∏–º—è –∏–ª–∏ —Ñ–∞–º–∏–ª–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç, —Ç–æ –æ–±—Ä–∞—â–µ–Ω–∏–µ –∫ –Ω–∏–º
	# –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 'None', –∞ –Ω–µ –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É. –° 'user_nick' —Ç–∞ –∂–µ —Å–∏—Ç—É–∞—Ü–∏—è.
	user_name = (user.first_name or "") + " " + (user.last_name or "")
	user_nick = user.username or ""



	update_user = KarmaUser.update(
							karma=(KarmaUser.karma + result),
							user_name=user_name,
							user_nick=user_nick
						).where(
							(KarmaUser.userid == user.id) &
							(KarmaUser.chatid == chat.id))
	update_user.execute()
	

@bot.message_handler(commands=["my"], func=is_my_message)
def my_karma(msg):
	"""
	–§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≤–æ–¥–∏—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –∫–∞—Ä–º—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
	–í—ã–≤–æ–¥–∏—Ç—Å—è –∫–∞—Ä–º–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–∑–≤–∞–ª —Ñ—É–Ω–∫—Ü–∏—é
	:param msg: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è-–∫–æ–º–∞–Ω–¥—ã
	"""
	
	user = select_user(msg.from_user, msg.chat)
	if not user:
		insert_user(msg.from_user, msg.chat)

	user = select_user(msg.from_user, msg.chat)

	if user.user_name:
		name = user.user_name.strip()
	else:
		name = user.user_nick.strip()

	main_log.info(f"User {name} check his karma ({user.karma})")
	user_rang = "ü§ñ –ë–æ—Ç"
	if user.karma <= 9: user_rang = "ü§ñ\n      <code>–ë–æ—Ç</code>"
	if 10 <= user.karma < 20: user_rang = "ü§´\n      <code>–¢–∏—Ö–æ–Ω—è</code>"
	if 20 <= user.karma < 30: user_rang = "üêõ\n      <code>–õ–∏—á–∏–Ω–∫–∞</code>"
	if 30 <= user.karma < 40: user_rang = "üë§\n      <code>–ì–æ—Å—Ç—å</code>"
	if 40 <= user.karma < 50: user_rang = "üê§\n      <code>–ü—Ä–æ—Ö–æ–∂–∏–π</code>"
	if 50 <= user.karma < 60: user_rang = "üéó\n      <code>–ù–æ–≤–∏—á–æ–∫</code>"
	if 60 <= user.karma < 70: user_rang = "üî±\n      <code>–õ—é–±–æ–ø—ã—Ç–Ω—ã–π</code>"
	if 70 <= user.karma < 80: user_rang = "‚öúÔ∏è\n      <code>–°—Ç—Ä–∞–Ω–Ω–∏–∫</code>"
	if 80 <= user.karma < 90: user_rang = "‚ú®\n      <code>–ë—ã–≤–∞–ª—ã–π</code>"
	if 90 <= user.karma < 100: user_rang = "ü•â\n      <code>–ü–æ—Å—Ç–æ—è–ª–µ—Ü</code>"
	if 100 <= user.karma < 120: user_rang = "ü•à\n      <code>–ó–∞–≤—Å–µ–≥–¥–∞—Ç–∞–π</code>"
	if 120 <= user.karma < 150: user_rang = "ü•á\n      <code>–ú–µ—Å—Ç–Ω—ã–π –∂–∏—Ç–µ–ª—å</code>"
	if 150 <= user.karma < 200: user_rang = "üéñ\n      <code>–ì–æ—Ä–æ–¥–æ–≤–æ–π</code>"
	if 200 <= user.karma < 250: user_rang = "üèÖ\n      <code>–•–∞–±–∞—Ä–æ–≤—á–∞–Ω–∏–Ω</code>"
	if 250 <= user.karma < 300: user_rang = "‚≠êÔ∏è\n      <code>–•–∞–±–ê–∫—Ç–∏–≤–∏—Å—Ç</code>"
	if 300 <= user.karma < 350: user_rang = "üåü\n      <code>–î–∞–ª—å–Ω–µ–≤–æ—Å—Ç–æ—á–Ω–∏–∫</code>"
	if 350 <= user.karma < 400: user_rang = "üèµ\n      <code>–°—Ç–∞—Ä–æ–∂–∏–ª</code>"
	if 400 <= user.karma < 450: user_rang = "üí´\n      <code>–°—Ç–∞–ª–∫–µ—Ä</code>"
	if 450 <= user.karma < 500: user_rang = "üí•\n      <code>–í–µ—Ç–µ—Ä–∞–Ω</code>"
	if 500 <= user.karma < 550: user_rang = "üé≠\n      <code>–§–∏–ª–æ—Å–æ—Ñ</code>"
	if 550 <= user.karma < 600: user_rang = "üéì\n      <code>–ú—ã—Å–ª–∏—Ç–µ–ª—å</code>"
	if 600 <= user.karma < 650: user_rang = "üõ†\n      <code>–ú–∞—Å—Ç–µ—Ä</code>"
	if 650 <= user.karma < 700: user_rang = "‚òÄÔ∏è\n      <code>–°–ø–µ—Ü</code>"
	if 700 <= user.karma < 750: user_rang = "üîÆ\n      <code>–û—Ä–∞–∫—É–ª</code>"
	if 750 <= user.karma < 800: user_rang = "üèÜ\n      <code>–ì—É—Ä—É</code>"
	if 800 <= user.karma < 850: user_rang = "üëë\n      <code>–≠–ª–∏—Ç–∞</code>"
	if 850 <= user.karma < 900: user_rang = "üß†\n      <code>–ú—É–¥—Ä–µ—Ü</code>"
	if 900 <= user.karma < 1000: user_rang = "üëÅ\n      <code>–°–º–æ—Ç—Ä–∏—Ç–µ–ª—å</code>"
	if 1000 <= user.karma < 1200: user_rang = "üèπ\n      <code>–í–æ–∂–¥—å</code>"
	if 1200 <= user.karma < 1500: user_rang = "‚úùÔ∏è\n      <code>–ë–æ–≥</code>"
	if 1500 <= user.karma < 2800: user_rang = "‚ö°Ô∏è\n      <code>–í–µ—Ä—Ö–æ–≤–Ω—ã–π –ë–æ–≥</code>"
	if 1800 <= user.karma < 2000: user_rang = "‚ö°‚ö°Ô∏èÔ∏èÔ∏è\n      <code>–ü–∞–Ω—Ç–µ–æ–Ω</code>"
	if user.karma > 2000: user_rang = "üë§\n      <code>–°–ª–æ–º–∞–ª —Å–∏—Å—Ç–µ–º—É</code>\n"

	now_karma = f"–ö–∞—Ä–º–∞ —É {name}: <b>{user.karma}</b> {user_rang}"
	bot.reply_to(msg, now_karma, parse_mode="HTML")
	bot.delete_message(msg.chat.id, msg.message_id)

    
@bot.message_handler(commands=["top"], func=is_my_message)
def top_best(msg):
	main_log.info("Starting func 'top_best'")
	"""
	–§—É–Ω–∫—Ü–∏—è –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –Ω–∞–π–±–æ–ª—å—à–∏–º –∑–Ω–∞—á–µ–Ω–∏–µ–º –∫–∞—Ä–º—ã
	:param msg: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è-–∫–æ–º–∞–Ω–¥—ã
	"""

	if len(msg.text.split()) == 1:
		result=10
	else:
		result = int(msg.text.split()[1])	
	selected_user = KarmaUser.select()\
		.where((KarmaUser.karma > 0) & (KarmaUser.chatid == msg.chat.id))\
		.order_by(KarmaUser.karma.desc())\
		.limit(result)
	user_rang = "ü§ñ –ë–æ—Ç"
	top_mess = "üìà –¢–æ–ø –±–ª–∞–≥–æ–¥–∞—Ä–∏–º—ã—Ö\n\n"
	for i, user in enumerate(selected_user):
		if user.user_name:
			name = user.user_name.strip()
		else:
			name = user.user_nick.strip()

		try:

			userstatus = bot.get_chat_member(msg.chat.id,user.userid)
			if userstatus.status == 'creator' or userstatus.status == 'member' or userstatus.status == 'administrator' or userstatus.status != 'left' or userstatus.status != 'kicked' or userstatus.status != 'restricted':
				if user.karma <= 9: user_rang = "ü§ñ\n      <code>–ë–æ—Ç</code>"
				if 10 <= user.karma < 20: user_rang = "ü§´\n      <code>–¢–∏—Ö–æ–Ω—è</code>"
				if 20 <= user.karma < 30: user_rang = "üêõ\n      <code>–õ–∏—á–∏–Ω–∫–∞</code>"
				if 30 <= user.karma < 40: user_rang = "üë§\n      <code>–ì–æ—Å—Ç—å</code>"
				if 40 <= user.karma < 50: user_rang = "üê§\n      <code>–ü—Ä–æ—Ö–æ–∂–∏–π</code>"
				if 50 <= user.karma < 60: user_rang = "üéó\n      <code>–ù–æ–≤–∏—á–æ–∫</code>"
				if 60 <= user.karma < 70: user_rang = "üî±\n      <code>–õ—é–±–æ–ø—ã—Ç–Ω—ã–π</code>"
				if 70 <= user.karma < 80: user_rang = "‚öúÔ∏è\n      <code>–°—Ç—Ä–∞–Ω–Ω–∏–∫</code>"
				if 80 <= user.karma < 90: user_rang = "‚ú®\n      <code>–ë—ã–≤–∞–ª—ã–π</code>"
				if 90 <= user.karma < 100: user_rang = "ü•â\n      <code>–ü–æ—Å—Ç–æ—è–ª–µ—Ü</code>"
				if 100 <= user.karma < 120: user_rang = "ü•à\n      <code>–ó–∞–≤—Å–µ–≥–¥–∞—Ç–∞–π</code>"
				if 120 <= user.karma < 150: user_rang = "ü•á\n      <code>–ú–µ—Å—Ç–Ω—ã–π –∂–∏—Ç–µ–ª—å</code>"
				if 150 <= user.karma < 200: user_rang = "üéñ\n      <code>–ì–æ—Ä–æ–¥–æ–≤–æ–π</code>"
				if 200 <= user.karma < 250: user_rang = "üèÖ\n      <code>–•–∞–±–∞—Ä–æ–≤—á–∞–Ω–∏–Ω</code>"
				if 250 <= user.karma < 300: user_rang = "‚≠êÔ∏è\n      <code>–•–∞–±–ê–∫—Ç–∏–≤–∏—Å—Ç</code>"
				if 300 <= user.karma < 350: user_rang = "üåü\n      <code>–î–∞–ª—å–Ω–µ–≤–æ—Å—Ç–æ—á–Ω–∏–∫</code>"
				if 350 <= user.karma < 400: user_rang = "üèµ\n      <code>–°—Ç–∞—Ä–æ–∂–∏–ª</code>"
				if 400 <= user.karma < 450: user_rang = "üí´\n      <code>–°—Ç–∞–ª–∫–µ—Ä</code>"
				if 450 <= user.karma < 500: user_rang = "üí•\n      <code>–í–µ—Ç–µ—Ä–∞–Ω</code>"
				if 500 <= user.karma < 550: user_rang = "üé≠\n      <code>–§–∏–ª–æ—Å–æ—Ñ</code>"
				if 550 <= user.karma < 600: user_rang = "üéì\n      <code>–ú—ã—Å–ª–∏—Ç–µ–ª—å</code>"
				if 600 <= user.karma < 650: user_rang = "üõ†\n      <code>–ú–∞—Å—Ç–µ—Ä</code>"
				if 650 <= user.karma < 700: user_rang = "‚òÄÔ∏è\n      <code>–°–ø–µ—Ü</code>"
				if 700 <= user.karma < 750: user_rang = "üîÆ\n      <code>–û—Ä–∞–∫—É–ª</code>"
				if 750 <= user.karma < 800: user_rang = "üèÜ\n      <code>–ì—É—Ä—É</code>"
				if 800 <= user.karma < 850: user_rang = "üëë\n      <code>–≠–ª–∏—Ç–∞</code>"
				if 850 <= user.karma < 900: user_rang = "üß†\n      <code>–ú—É–¥—Ä–µ—Ü</code>"
				if 900 <= user.karma < 1000: user_rang = "üëÅ\n      <code>–°–º–æ—Ç—Ä–∏—Ç–µ–ª—å</code>"
				if 1000 <= user.karma < 1200: user_rang = "üèπ\n      <code>–í–æ–∂–¥—å</code>"
				if 1200 <= user.karma < 1500: user_rang = "‚úùÔ∏è\n      <code>–ë–æ–≥</code>"
				if 1500 <= user.karma < 2800: user_rang = "‚ö°Ô∏è\n      <code>–í–µ—Ä—Ö–æ–≤–Ω—ã–π –ë–æ–≥</code>"
				if 1800 <= user.karma < 2000: user_rang = "‚ö°‚ö°Ô∏èÔ∏èÔ∏è\n      <code>–ü–∞–Ω—Ç–µ–æ–Ω</code>"
				if user.karma > 2000: user_rang = "üë§\n      <code>–°–ª–æ–º–∞–ª —Å–∏—Å—Ç–µ–º—É</code>"
				if userstatus.status == 'left' or userstatus.status == 'kicked' or userstatus.status == 'restricted':
					user_rang = "üíÄÔ∏èÔ∏èÔ∏è\n      <code>–í—ã–±—ã–ª</code>"
#					change_karma(user, msg.chat, -user.karma)
					update_user = KarmaUser.update(
							karma=(0),
							user_name=user.user_name.strip(),
							user_nick=user.user_nick.strip()
						).where(
							(KarmaUser.userid == user.userid) &
							(KarmaUser.chatid == msg.chat.id))
					update_user.execute()
			

				top_mess += f"{i+1}. <b>{name}</b> ({user.karma}) {user_rang}\n"

		except Exception:
				top_mess += f"{i+1}. <b>{name}</b> ({user.karma}) üóë\n      <code>–£–¥–∞–ª–µ–Ω–Ω—ã–π</code>\n"
				update_user = KarmaUser.update(
							karma=(0),
							user_name=user.user_name.strip(),
							user_nick=user.user_nick.strip()
						).where(
							(KarmaUser.userid == user.userid) &
							(KarmaUser.chatid == msg.chat.id))
				update_user.execute()
#				change_karma(user, msg.chat, -user.karma)

#				userstatus = bot.get_chat_member(msg.chat.id,user.userid)
#				change_karma(userstatus.user, msg.chat, -100)
	if not selected_user:
		top_mess = "–ù–∏–∫—Ç–æ –µ—â–µ –Ω–µ –∑–∞—Å–ª—É–∂–∏–ª –±—ã—Ç—å –≤ —ç—Ç–æ–º —Å–ø–∏—Å–∫–µ."
	bot.send_message(msg.chat.id, top_mess, parse_mode="HTML")
	bot.delete_message(msg.chat.id, msg.message_id)

	
	
@bot.message_handler(commands=["tinder", "—Ç–∏–Ω–¥–µ—Ä"], func=is_my_message)
def tinder(msg):
	"""
	–§—É–Ω–∫—Ü–∏—è –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≤–æ–¥–∏—Ç –ø–∞—Ä—É –¥–Ω—è
	""" 
	if is_game_abuse(msg):
		return
	Limitation.create(
		timer=pw.SQL("current_timestamp"),
		userid=msg.from_user.id,
		chatid=msg.chat.id)
	user = select_user(msg.from_user, msg.chat)
	if not user:
		insert_user(msg.from_user, msg.chat)
	user = select_user(msg.from_user, msg.chat)	
	if user.is_freezed:
		bot.reply_to(msg, f"–†–∞–∑–º–æ—Ä–æ–∑—å—Ç–µ –∫–∞—Ä–º—É —á—Ç–æ–±—ã –∏–≥—Ä–∞—Ç—å!", parse_mode="HTML")
	else:
		if user.karma > 10:
				
			user = bot.get_chat_member(msg.chat.id, msg.from_user.id)
			if user.status == 'creator':
				change_karma(msg.from_user, msg.chat, +5)
			else:
				change_karma(msg.from_user, msg.chat, -5)
	
			
			selected_user = KarmaUser.select()\
				.where((KarmaUser.karma > 10) & (KarmaUser.chatid == msg.chat.id))\
				.order_by(KarmaUser.karma.desc())\
				.limit(200)
			top_mess = f"ü§ö"
			selected_user = random.choices(selected_user)
			for i, user in enumerate(selected_user):
			
				if user.is_freezed:
					top_mess +=  f"–°–µ–≥–æ–¥–Ω—è –Ω–æ—á—å —Å–∞–º–æ–ø–æ–∑–Ω–∞–Ω–∏—è‚úä"
				else:
					nick = user.user_nick.strip()
					name = user.user_name.strip()
					userid = user.userid
					gey = ''
					if msg.from_user.id == userid:
						gey = ' —Å–∞–º —Å —Å–æ–±–æ–π'
					if name.endswith('–∞') or name.endswith('—è') or name.endswith('a'):
						
						gender = f'‚ù§Ô∏è –í—ã –æ–±—Ä–∞–∑–æ–≤–∞–ª–∏ –ø–∞—Ä—É —Å –¥–µ–≤—É—à–∫–æ–π üë©{gey}'
					else:
						gender = f'‚ù§Ô∏è –í—ã –æ–±—Ä–∞–∑–æ–≤–∞–ª–∏ –ø–∞—Ä—É —Å –ø–∞—Ä–Ω–µ–º üë±{gey}'
					try:
						userstatus = bot.get_chat_member(msg.chat.id,user.userid)
						if userstatus.status == 'creator' or userstatus.status == 'member' or userstatus.status == 'administrator':
							
							change_karma(userstatus.user, msg.chat, random.randint(1, 3))
						
							top_mess = f"{gender} <a href='tg://user?id={userid}'>{name}</a>."

						if userstatus.status == 'left' or userstatus.status == 'kicked' or userstatus.status == 'restricted':
							top_mess = f"üíÄÔ∏è –í—ã –æ–±—Ä–∞–∑–æ–≤–∞–ª–∏ –ø–∞—Ä—É —Å —É—Å–æ–ø—à–∏–º <b>{name}</b>"
					except Exception:
						top_mess+= f"–°–µ–≥–æ–¥–Ω—è –≤–µ—á–µ—Ä —Å–∞–º–æ–ø–æ–∑–Ω–∞–Ω–∏—èü§ö"
#				change_karma(userstatus.user, msg.chat, -100)
		else:
			bot.delete_message(msg.chat.id, msg.message_id)

	if not selected_user:
		top_mess = "–ù–∏–∫—Ç–æ –µ—â–µ –Ω–µ –∑–∞—Å–ª—É–∂–∏–ª –±—ã—Ç—å –≤ —ç—Ç–æ–º —Å–ø–∏—Å–∫–µ."
	bot.reply_to(msg, top_mess, parse_mode="HTML")
	
	


@bot.message_handler(commands=["pop"], func=is_my_message)
def top_bad(msg):
	"""
	–§—É–Ω–∫—Ü–∏—è –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –Ω–∞–π–º–µ–Ω—å—à–∏–º –∑–Ω–∞—á–µ–Ω–∏–µ–º –∫–∞—Ä–º—ã
	:param msg: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è-–∫–æ–º–∞–Ω–¥—ã
	"""
	selected_user = KarmaUser.select() \
		.where((KarmaUser.karma < 0) & (KarmaUser.chatid == msg.chat.id)) \
		.order_by(KarmaUser.karma.asc()) \
		.limit(10)

	top_mess = "üí© –¢–æ–ø —Ä—É–≥–∞–µ–º—ã—Ö:\n"
	for i, user in enumerate(selected_user):
	

		if user.user_name:
			name = user.user_name.strip()
		else:
			name = user.user_nick.strip()
		if name == "Telegram" or name == "–•–∞–±–ö–∞—Ä–º–∞":
			name =""
		
		userstatus = bot.get_chat_member(msg.chat.id,user.userid)
		if userstatus.status != 'left':
			top_mess += f"*{i+1}*. {name}, ({user.karma})\n"
	if not selected_user:
		top_mess = "–ù–∏–∫—Ç–æ –µ—â–µ –Ω–µ –∑–∞—Å–ª—É–∂–∏–ª –±—ã—Ç—å –≤ —ç—Ç–æ–º —Å–ø–∏—Å–∫–µ."
	bot.send_message(msg.chat.id, top_mess, parse_mode="Markdown")
	bot.delete_message(msg.chat.id, msg.message_id)
	
	
@bot.message_handler(commands=["send"], func=is_my_message)
def send(msg):
	"""
	–§—É–Ω–∫—Ü–∏—è –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –Ω–∞–π–º–µ–Ω—å—à–∏–º –∑–Ω–∞—á–µ–Ω–∏–µ–º –∫–∞—Ä–º—ã
	:param msg: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è-–∫–æ–º–∞–Ω–¥—ã
	"""
	selected_user = KarmaUser.select() \
		.where((KarmaUser.karma > 400))\
		.order_by(KarmaUser.karma.desc())\
		.limit(10)

	for i, user in enumerate(selected_user):
		try:
			if i % 20 == 0:
				time.sleep(1)
			bot.send_message(user.userid, "–¢–µ—Å—Ç —Ä–∞—Å—Å—ã–ª–∫–∏ –æ—Ç @khvchat", parse_mode="HTML" )
		except:
			continue
	


@bot.message_handler(commands=["freez", "unfreez"], func=is_my_message)
def freeze_me(msg):
	"""
	–§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –∑–∞–º–æ—Ä–æ–∑–∫–∏ –∑–Ω–∞—á–µ–Ω–∏—è –∫–∞—Ä–º—ã.
	–ó–∞–º–æ—Ä–æ–∑–∫–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –≤—ã–∑–≤–∞–≤—à–µ–≥–æ —Ñ—É–Ω–∫—Ü–∏—é.
	–ó–∞–º–æ—Ä–æ–∑–∫–∞ –æ–∑–Ω–∞—á–∞–µ—Ç –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å–º–µ–Ω—ã –∫–∞—Ä–º—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è,
	–∏ –∑–∞–ø—Ä–µ—Ç –Ω–∞ —Å–º–µ–Ω—É –∫–∞—Ä–º—ã –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
	:param msg: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è-–∫–æ–º–∞–Ω–¥—ã
	"""
	user = select_user(msg.from_user, msg.chat)
	freeze = True if msg.text[1:9] == "freez" else False

	result = ""
	if not user:
		insert_user(msg.from_user, msg.chat)
		user = select_user(msg.from_user, msg.chat)
	if user.is_freezed != freeze:
		result += "–°—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–µ–Ω. "
		KarmaUser.update(is_freezed=(not user.is_freezed)).where(
			(KarmaUser.userid == msg.from_user.id) &
			(KarmaUser.chatid == msg.chat.id)).execute()
	result += f"–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å: –∫–∞—Ä–º–∞ {'–∑–∞' if freeze else '—Ä–∞–∑'}–º–æ—Ä–æ–∂–µ–Ω–∞."
	bot.reply_to(msg, result)


@bot.message_handler(commands=["god"], func=is_my_message)
def gods(msg):
	"""
	–ù–µ–±–æ–ª—å—à–∞—è —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ–∑–¥–∞—Ç–µ–ª—é –±–æ—Ç–∞ 
	–¥–æ–±–∞–≤–∏—Ç—å –∫–æ–º—É –∏ —Å–∫–æ–ª—å–∫–æ —É–≥–æ–¥–Ω–æ –æ—á–∫–æ–≤ –∫–∞—Ä–º—ã –≤ –æ–±—Ö–æ–¥ 
	–≤—Å–µ—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π.
	:param msg: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è-–∫–æ–º–∞–Ω–¥—ã
	"""
	if len(msg.text.split()) == 1:
		return

	if msg.from_user.id not in config.gods:
		bot.reply_to(msg, "–¢—ã –Ω–µ –∏–º–µ–µ—à—å –≤–ª–∞—Å—Ç–∏.")
		return
	result = int(msg.text.split()[1])
	change_karma(msg.reply_to_message.from_user, msg.chat, result)
	bot.delete_message(msg.chat.id, msg.message_id)

@bot.message_handler(commands=["gift"], func=is_my_message)
def gift_karma(msg):
	"""
	–ù–µ–±–æ–ª—å—à–∞—è —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ–∑–¥–∞—Ç–µ–ª—é –±–æ—Ç–∞ 
	–¥–æ–±–∞–≤–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫
	"""
	if msg.reply_to_message:
		if is_game_abuse(msg):
			return
		if is_karma_freezed(msg):
			return
		if msg.reply_to_message:
			if msg.from_user.id == msg.reply_to_message.from_user.id:
				bot.send_message(msg.chat.id, "–ù–µ–ª—å–∑—è –∏–∑–º–µ–Ω—è—Ç—å –∫–∞—Ä–º—É —Å–∞–º–æ–º—É —Å–µ–±–µ.")
				return
			Limitation.create(
				timer=pw.SQL("current_timestamp"),
				userid=msg.from_user.id,
				chatid=msg.chat.id)
			user = bot.get_chat_member(msg.chat.id, msg.from_user.id)
			if user.status == 'administrator' or user.status == 'creator':
				change_karma(msg.reply_to_message.from_user, msg.chat, 15)
				bot.reply_to(msg, "üéÅ –æ—Ç—Å—ã–ø–∞–ª –∫–∞—Ä–º—ã.")
			else:
				user = select_user(msg.from_user, msg.chat)
				if not user:
					insert_user(msg.from_user, msg.chat)
				user = select_user(msg.from_user, msg.chat)
				if user.karma > 5:
				
					change_karma(msg.from_user, msg.chat, -5)
					change_karma(msg.reply_to_message.from_user, msg.chat, 5) 
					bot.reply_to(msg.reply_to_message, "üéÅ –í–∞–º –ø–æ–¥–∞—Ä–∏–ª–∏ –∫–∞—Ä–º—É <b>+5</b>.", parse_mode="HTML")
				
				else:
				
					bot.reply_to(msg, "üéÅ –ù–µ—Ö–≤–∞—Ç–∞–µ—Ç –∫–∞—Ä–º—ã –¥–ª—è –ø–æ–¥–∞—Ä–∫–∞.", parse_mode="HTML")
		else:
			return
	else:
		bot.delete_message(msg.chat.id, msg.message_id)
		return

@bot.message_handler(commands=["unmute"], func=is_my_message)
def un_mute(msg):
	"""
	–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Å–æ–∑–¥–∞—Ç–µ–ª—è. –ü–æ–∑–≤–æ–ª—è–µ—Ç —Å–Ω—è—Ç—å —Å 1-–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ
	–Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∫–∞—Ä–º—ã
	:param msg: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è-–∫–æ–º–∞–Ω–¥—ã
	"""
	if msg.from_user.id not in config.gods:
		return
	Limitation.delete().where(
		(Limitation.userid == msg.reply_to_message.from_user.id) &
		(Limitation.chatid == msg.chat.id)).execute()
	bot.send_message(msg.chat.id, "–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –º–µ–Ω—è—Ç—å –∫–∞—Ä–º—É –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∞.")

def is_karma_changing(text):
	result = []
	# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–∞—Ä–º—ã –ø–æ —Å–º–∞–π–ª–∏–∫–∞–º
	if len(text) == 1:
		if text in config.good_emoji:
			result.append(1)
		if text in config.bad_emoji:
			result.append(-1)
		return result

	# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
	text = text.lower()
	for punc in string.punctuation:
		text = text.replace(punc, "")
	for white in string.whitespace[1:]:
		text = text.replace(white, "")

	# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–∞—Ä–º—ã –ø–æ —Ç–µ–∫—Å—Ç—É —Å–æ–æ–±—â–µ–Ω–∏—è
	for word in config.good_words:
		if word == text \
				or (" "+word+" " in text) \
				or text.startswith(word) \
				or text.endswith(word):
			result.append(1)

	for word in config.bad_words:
		if word in text \
				or (" "+word+" " in text) \
				or text.startswith(word) \
				or text.endswith(word):
			result.append(-1)
		
			
	return result
	
def is_karma_changing_mat(text):
	result = []
		
	if len(text)==1:
		result.append(-1)

			# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
	text = text.lower()
	for punc in string.punctuation:
		text = text.replace(punc, "")
	for white in string.whitespace[1:]:
		text = text.replace(white, "")
		
	for word in config.mat_words:
		if word in text \
				or (" "+word+" " in text) \
				or text.startswith(word) \
				or text.endswith(word):
			result.append(-1)
	if len(text.split()) > 2:
		for word in config.heppy_words:
			if word in text \
					or (" "+word+" " in text) \
					or text.startswith(word) \
					or text.endswith(word):
				result.append(1)
			

	return result

def is_karma_freezed(msg):
	"""
	–§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–π –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∫–∞—Ä–º—ã.
	:param msg: –û–±—ä–µ–∫—Ç —Å–æ–±—â–µ–Ω–∏—è, –∏–∑ –∫–æ—Ç–æ—Ä–æ–≥–æ –±–µ—Ä—É—Ç—Å—è id —á–∞—Ç–∞ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
	:return: True –µ—Å–ª–∏ —É –∫–æ–≥–æ-—Ç–æ –∏–∑ —É—á–∞—Å–Ω–∏–∫–æ–≤ –∑–∞–º–æ—Ä–æ–∂–µ–Ω–∞ –∫–∞—Ä–º–∞. –ò–Ω–∞—á–µ False.
	"""

	# –í—ã–±–æ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —Å–≤—è–∑–∞–Ω—ã—Ö —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º.
	banned_request = KarmaUser.select().where(
		(KarmaUser.chatid == msg.chat.id) &
		(
			(KarmaUser.userid == msg.from_user.id) |
			(KarmaUser.userid == msg.reply_to_message.from_user.id)
		)
	)

	# –£ –≤—ã–±—Ä–∞–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è —Å—Ç–∞—Ç—É—Å –∑–∞–º–æ—Ä–æ–∑–∫–∏
	for req in banned_request:
		if req.is_freezed:
			name = ""
			if not req.user_name.isspace():
				name = req.user_name.strip()
			else:
				name = req.user_nick.strip()
			# –°–æ–æ–±—â–µ–Ω–∏–µ, —É –∫–æ–≥–æ –∏–º–µ–Ω–Ω–æ –∑–∞–º–æ—Ä–æ–∂–µ–Ω–∞ –∫–∞—Ä–º–∞
#			reply_text = f"–Æ–∑–µ—Ä: {name}.\n–°—Ç–∞—Ç—É—Å –∫–∞—Ä–º—ã: –ó–∞–º–æ—Ä–æ–∂–µ–Ω–∞."
#			bot.send_message(msg.chat.id, reply_text)
			return True
	return False


def is_game_abuse(msg):
	user = bot.get_chat_member(msg.chat.id, msg.from_user.id)
	if user.status == 'creator':
		return
	hours_ago_12 = pw.SQL(f"current_timestamp-interval'{random.randint(10, 120)} minutes'")
	limitation_request = Limitation.select().where(
		(Limitation.timer > hours_ago_12) &
		(Limitation.userid == msg.from_user.id) &
		(Limitation.chatid == msg.chat.id))

	if len(limitation_request) > 0:
		timer = limitation_request[0].timer + datetime.timedelta(hours=15)
		timer = timer.strftime("%H:%M %d.%m.%Y")
		bot.delete_message(msg.chat.id, msg.message_id)
		return True
	return False
	
def is_karma_abuse(msg):
	user = bot.get_chat_member(msg.chat.id, msg.from_user.id)
	if user.status == 'creator':
		return
	hours_ago_12 = pw.SQL(f"current_timestamp-interval'{random.randint(5, 60)} minutes'")
	limitation_request = Limitation.select().where(
		(Limitation.timer > hours_ago_12) &
		(Limitation.userid == msg.from_user.id) &
		(Limitation.chatid == msg.chat.id))

	if len(limitation_request) > 1:
		timer = limitation_request[0].timer + datetime.timedelta(hours=15)
		timer = timer.strftime("%H:%M %d.%m.%Y")
		return True
	return False


@bot.message_handler(commands=["zaban","–±–∞–Ω"], func=reply_exist)
def zaBan(msg):

		user = bot.get_chat_member(msg.chat.id, msg.reply_to_message.from_user.id)
		if user.status == 'administrator' or user.status == 'creator':
			return
		bot.send_message(msg.chat.id, f"<a href='tg://user?id=55910350'>üî´</a> <b>{msg.from_user.first_name}</b> –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –≤—ã–≥–Ω–∞—Ç—å <b>{msg.reply_to_message.from_user.first_name}</b> –∏–∑ –•–∞–±—á–∞—Ç–∞!", parse_mode="HTML")
		bot.send_poll(msg.chat.id, f'–°–æ–≥–ª–∞—Å–Ω—ã –≤—ã–≥–Ω–∞—Ç—å {msg.reply_to_message.from_user.first_name} –∏–∑ –ß–∞—Ç–∞?', ['–î–∞', '–ù–µ—Ç', '–ù–µ –∑–Ω–∞—é'],is_anonymous=False)
		bot.delete_message(msg.chat.id, msg.message_id)

@bot.message_handler(commands=["—É—Ç—Ä–∞"], func=is_my_message)
def utra(msg):
		bot.reply_to(msg, f"–° –¥–æ–±—Ä—ã–º —É—Ç—Ä–æ–º, –•–∞–±–∞—Ä–æ–≤—Å–∫! ‚òÄÔ∏è –í–∞–º –æ—Ç–ª–∏—á–Ω–æ–≥–æ –∏ –ø–æ–∑–∏—Ç–∏–≤–Ω–æ–≥–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è!!!", parse_mode="HTML")
@bot.message_handler(commands=["–ø—Ä–∏–≤–µ—Ç","hi"], func=reply_exist)
def privet(msg):

		bot.reply_to(msg.reply_to_message,f"‚úå <b>{msg.reply_to_message.from_user.first_name}</b> –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º —Ç–µ–±—è –≤ <b>–•–∞–±–ß–∞—Ç–µ</b>! –ü–æ –¥–æ–±—Ä–æ–π —Ç—Ä–∞–¥–∏—Ü–∏–∏, –∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç—å—Å—è –∏ —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –Ω–µ–º–Ω–æ–≥–æ –æ —Å–µ–±–µ.", parse_mode="HTML")

@bot.message_handler(commands=["—Ñ–æ—Ç–æ"], func=reply_exist)
def photo(msg):

		bot.reply_to(msg.reply_to_message,f"<b>{msg.reply_to_message.from_user.first_name}</b> –Ω–µ —Å–æ–±–ª–∞–≥–æ–≤–æ–ª–∏—Ç–µ –ª–∏ –≤—ã —Å–∫–∏–Ω—É—Ç—å –≤ —á–∞—Ç —Å–≤–æ—é —Ñ–æ—Ç–æ—á–∫—É, –Ω–∞–º –±—É–¥–µ—Ç –æ—á–µ–Ω—å –ø—Ä–∏—è—Ç–Ω–æ –≤–∞—Å –ª–∏—Ü–µ–∑—Ä–µ—Ç—å üôÇ", parse_mode="HTML")

@bot.message_handler(commands=["—Ñ—Å–±"], func=reply_exist)
def fsb(msg):

		bot.reply_to(msg.reply_to_message,f"<a href='https://telegra.ph/file/1a296399c86ac7a19777f.jpg'>üòé</a> <b>{msg.reply_to_message.from_user.first_name}</b> –∑–∞ –≤–∞–º–∏ —É–∂–µ –≤—ã–µ—Ö–∞–ª–∏!", parse_mode="HTML")

			
def commands(msg, text):
	
	seves = saves_database.get(database)
	if msg.text.lower() != "croco":
		if re.search(r'[–∞-—è–ê-–Ø—ë–Å]',msg.text.split()[0].lower()) and re.search(r'[A-Za-z]',msg.text.split()[0].lower()):
			bot.reply_to(msg,f"–ü–æ–ø—ã—Ç–∞–ª—Å—è –æ–±–æ–π—Ç–∏ —Å–∏—Å—Ç–µ–º—É üóø", parse_mode="HTML")
		if msg.text.lower() == seves:
			seves_id = saves_database.get(database_id)
			seves_id_mute = saves_database.get(msg.from_user.id)
			seves_id_time = saves_database.get(msg.from_user.id+1)
			if seves_id_mute == 1:
				a=datetime.datetime.today() 
				b= seves_id_time+datetime.timedelta(minutes=15)
				if a < b:
					saves_database[msg.from_user.id]=0
					bot.restrict_chat_member(msg.chat.id, msg.from_user.id, until_date=time.time()+300)
					bot.delete_message(msg.chat.id, msg.message_id)
					bot.send_message(msg.chat.id,f'üò∂ <b>{msg.from_user.first_name}</b> –û–≥—Ä–∞–Ω–∏—á–µ–Ω –Ω–∞ 5 –º–∏–Ω—É—Ç –∑–∞ –Ω–∞—Ä—É—à–µ–Ω–∏—è –≤ –ö—Ä–æ–∫–æ–¥–∏–ª–µ.', parse_mode="HTML")
					change_karma(msg.from_user, msg.chat, -10)
				
				else:
					saves_database[msg.from_user.id]=0
			
			if seves_id ==  msg.from_user.id:
				
				bot.reply_to(msg,f"–ú—É—Ö–ª–µ–≤–∞—Ç—å –Ω–µ –∫—Ä–∞—Å–∏–≤–æ: -10 –∫–∞—Ä–º—ã üí©", parse_mode="HTML")
				change_karma(msg.from_user, msg.chat, -10)
					
			else:
				
				msg_id = bot.reply_to(msg,f"üéâ –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: <b>{seves}</b> +10 –∫–∞—Ä–º—ã, –∑–∞–ø—É—Å—Ç–∏—Ç—å –∏–≥—Ä—É /croco", parse_mode="HTML").message_id
				change_karma(msg.from_user, msg.chat, 10)
				seves_id2 = saves_database.get(message_id_del)
				bot.delete_message(msg.chat.id, seves_id2)
				saves_database[database] = "croco"
				saves_database[database_id]=0
				saves_database[msg.from_user.id]=1
				saves_database[msg.from_user.id+1]=datetime.datetime.today()
				saves_database[message_id_del2] =msg_id
				return

@bot.callback_query_handler(func=lambda call: True)
def query_handler(call):
	change_croco = saves_database.get(change_croco_2)
	seves_time = saves_database.get(database_time)
	idmy =seves_time+call.from_user.id
	idmy2=idmy+1
	idmy3=idmy+3
	if  f"{idmy}" == f"{call.data}":
		bot.answer_callback_query(callback_query_id=call.id, show_alert=True,  text=f"–ó–∞–¥—É–º–∞–Ω–Ω–æ–µ —Å–ª–æ–≤–æ: {saves_database[database]}")

	if f"{idmy3}" == f"{call.data}":
		if change_croco<1:
			bot.answer_callback_query(callback_query_id=call.id, show_alert=True, text="üêä –ú–µ–Ω—è—Ç—å —Å–ª–æ–≤–æ –º–æ–∂–Ω–æ –Ω–µ –±–æ–ª–µ–µ 2-—É—Ö —Ä–∞–∑ üö´")
			return
		
#			bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=" –ö–∞–∫ –¥–µ–ª–∞?",reply_markup=None)
#			bot.answer_callback_query(callback_query_id=call.id, show_alert=True,
#        text="–ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–æ...")
		saves_database[change_croco_2]=change_croco-1
		saves_database[database] = random.choice(["üê∂","üê±","üê≠","üêπ","üê∞","ü¶ä","üêª","üêº","üê®","üêØ","ü¶Å","üêÆ","üê∑","üêΩ","üê∏","üêµ","üôà","üôâ","üôä","üôä","üêí","üêî","üêß","üê¶","üê§","üê£","üê•","ü¶Ü","ü¶Ö","ü¶â","ü¶á","üê∫","üêó","üê¥","ü¶Ñ","üêù","ü™±","üêõ","ü¶ã","üêå","üêû","üêú","ü™∞","ü™≤","ü™≥","ü¶ü","ü¶ó","üï∑","üï∏","ü¶Ç","üê¢","üêç","ü¶é","ü¶ñ","ü¶ï","üêô","ü¶ë","ü¶ê","ü¶û","ü¶Ä","üê°","üê†","üêü","üê¨","üê≥","üêã","ü¶à","üêä","üêÖ","üêÜ","ü¶ì","ü¶ç","ü¶ß","üêò","ü¶õ","ü¶è","üê™","üê´","ü¶í","ü¶ò","üêÉ","üêÇ","üêÑ","üêé","üêñ","üêè","üêë","ü¶ô","üêê","ü¶å","üêï","üê©","ü¶Æ","üêà","üêì","ü¶É","ü¶ö","ü¶ú","ü¶¢","ü¶©","üïä","üêá","ü¶ù","ü¶®","ü¶°","ü¶¶","ü¶•","üêÅ","üêÄ","üêø","ü¶î","üêæ","üêâ","üê≤"])
		bot.answer_callback_query(callback_query_id=call.id, show_alert=True,  text=f"–ó–∞–¥—É–º–∞–Ω–Ω–æ–µ –≠–º–æ–¥–∑–∏: {saves_database[database]}")
		bot.send_message(call.message.chat.id, f"üêä {call.from_user.first_name} –∑–∞–≥–∞–¥–∞–ª <b>–≠–º–æ–¥–∑–∏</b>", parse_mode="HTML")
		
	if f"{idmy2}" == f"{call.data}":
		if change_croco<1:
			bot.answer_callback_query(callback_query_id=call.id, show_alert=True, text="üêä –ú–µ–Ω—è—Ç—å —Å–ª–æ–≤–æ –º–æ–∂–Ω–æ –Ω–µ –±–æ–ª–µ–µ 2-—É—Ö —Ä–∞–∑ üö´")
			return
		saves_database[change_croco_2]=change_croco-1
		saves_database[database] = random.choice(config.kroko_words)
		bot.answer_callback_query(callback_query_id=call.id, show_alert=True,  text=f"–ó–∞–¥—É–º–∞–Ω–Ω–æ–µ —Å–ª–æ–≤–æ: {saves_database[database]}")
		bot.send_message(call.message.chat.id, f"üêä {call.from_user.first_name} —Å–º–µ–Ω–∏–ª —Å–ª–æ–≤–æ -5 –∫–∞—Ä–º—ã", parse_mode="HTML")
#	if  call.data == "newslovo":
#		croco2(call)
#		bot.delete_message(call.id, call.message_id)
		
	if  f"{idmy2}" != f"{call.data}":
		bot.answer_callback_query(callback_query_id=call.id, show_alert=True,  text=f"–°–ª–æ–≤–æ –∑–Ω–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Ç–æ—Ç –∫—Ç–æ —Å—Ç–∞—Ä—Ç–æ–≤–∞–ª –∏–≥—Ä—É.")
		
@bot.message_handler(commands=["croco", "–∫—Ä–æ–∫–æ–¥–∏–ª"], func=is_my_message)
def croco(msg):
	seves_id = saves_database.get(database_id)
	if seves_id ==  msg.from_user.id:
		bot.send_message(msg.chat.id,f'üêä {msg.from_user.first_name} —É–∂–µ –∑–∞–≥–∞–¥–∞–ª —Å–ª–æ–≤–æ.', parse_mode="HTML")
		bot.delete_message(msg.chat.id, msg.message_id)
		return
	else:
		try:
			seves_id2 = saves_database.get(message_id_del)
			bot.delete_message(msg.chat.id, seves_id2)
		except Exception:
			print("Error!")
	seves_id_mute = saves_database.get(msg.from_user.id)
	if seves_id_mute ==  1:
		saves_database[msg.from_user.id]=0
	a=random.randint(1,1000)
	idmy =a+msg.from_user.id
	idmy2 =idmy+1
	idmy3=idmy+3
	saves_database[database_time] =a
	saves_database[change_croco_2] =2
	saves_database[database_id] =msg.from_user.id
	
	saves_database[database] = random.choice(config.kroko_words)
	
	markup = telebot.types.InlineKeyboardMarkup()
	button = telebot.types.InlineKeyboardButton(text='üëÄ', callback_data=idmy)
	button3 = telebot.types.InlineKeyboardButton(text='üêä', callback_data=idmy3)
	button2 = telebot.types.InlineKeyboardButton(text='üîÑ', callback_data=idmy2)
	markup.add(button,button2,button3)
	msg_id = bot.send_message(chat_id=msg.chat.id, text=f'üêä {msg.from_user.first_name} –∑–∞–≥–∞–¥–∞–ª(–∞) —Å–ª–æ–≤–æ –≤ –∏–≥—Ä–µ –ö—Ä–æ–∫–æ–¥–∏–ª.', reply_markup=markup).message_id
	saves_database[message_id_del] =msg_id
	bot.delete_message(msg.chat.id, msg.message_id)
	try:
		seves_id3 = saves_database.get(message_id_del2)
		bot.delete_message(msg.chat.id, seves_id3)
	except Exception:
		print("Error!")
		
def getanekdot():
	z=''
	s=requests.get('http://anekdotme.ru/random')
	b=bs4.BeautifulSoup(s.text, "html.parser")
	p=b.select('.anekdot_text')
	for x in p:        
		s=(x.getText().strip())
		z=z+s+'\n\n'
	return s
    
@bot.message_handler(commands=["—à—É—Ç–∫–∞"], func=is_my_message)
def anekdot(msg):

	bot.reply_to(msg, f"ü§™ {getanekdot()}", parse_mode="HTML")
	
@bot.message_handler(commands=["citata", "—Ü–∏—Ç–∞—Ç–∞"], func=is_my_message)
def citata(msg):

	url = 'http://api.forismatic.com/api/1.0/'
	payload  = {'method': 'getQuote', 'format': 'json', 'lang': 'ru'}
	res = requests.get(url, params=payload)
	data = res.json()
	quote = data['quoteText']
	author = data['quoteAuthor']
	bot.reply_to(msg, f"üìç <i>{quote}</i> ¬©Ô∏è <b>{author}</b>", parse_mode="HTML")

#	citata = random.choice(config.citata_words)
	
#	bot.reply_to(msg, f"üìç –¶–∏—Ç–∞—Ç–∞: {citata}", parse_mode="HTML")

		
@bot.message_handler(commands=["date", "–¥–∞—Ç–∞"], func=is_my_message)
def date(msg):
	a = datetime.datetime.today()+datetime.timedelta(hours=58)
	t = a.strftime("%Y%m%d")
#	t2 = a.strftime("%d.%m.%Y, %H:%M")
	
	bot.send_photo(msg.chat.id, f"https://www.calend.ru/img/export/informer_names.png?{t}", caption = f"–•–∞–±–ß–∞—Ç üí¨ –µ—Å—Ç—å –Ω–µ–ø–ª–æ—Ö–∏–µ –ø–æ–≤–æ–¥—ã...")
	
@bot.message_handler(commands=["–∫–æ—Ç"], func=is_my_message)
def kot(msg):
	a = datetime.datetime.today()
	bot.send_photo(msg.chat.id, f"http://thecatapi.com/api/images/get?{a}", caption = f"–•–∞–±–ß–∞—Ç üêà –∫–æ—Ç–∏–∫")
	
@bot.message_handler(commands=["save","—Å–æ—Ö—Ä–∞–Ω–∏—Ç—å"], func=is_my_message)
def save(msg):
		
		bot.forward_message(-1001338159710, msg.chat.id, msg.reply_to_message.message_id)
		bot.reply_to(msg.reply_to_message,f"üíæ –°–æ–æ–±—â–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ <a href='https://t.me/joinchat/T8KyXgxSk1o4s7Hk'>–¶–∏—Ç–∞—Ç–Ω–∏–∫ –•–∞–±–ß–∞—Ç–∞</a>.", parse_mode="HTML")
	
@bot.message_handler(commands=["?"], func=is_my_message)
def q(msg):
	
	if len(msg.text.split()) == 1:
		bot.delete_message(msg.chat.id, msg.message_id)
		return
	
	random_karma = ("–ê–±—Å–æ–ª—é—Ç–Ω–æ —Ç–æ—á–Ω–æ!","–î–∞.","–ù–µ—Ç.","–°–∫–æ—Ä–µ–µ –¥–∞, —á–µ–º –Ω–µ—Ç.","–ù–µ —É–≤–µ—Ä–µ–Ω...","–û–¥–Ω–æ–∑–Ω–∞—á–Ω–æ –Ω–µ—Ç!","–ï—Å–ª–∏ —Ç—ã –Ω–µ —Ñ–∞–Ω–∞—Ç –∞–Ω–∏–º–µ, —É —Ç–µ–±—è –≤—Å–µ –ø–æ–ª—É—á–∏—Ç—Å—è!","–ú–æ–∂–µ—à—å –±—ã—Ç—å —É–≤–µ—Ä–µ–Ω –≤ —ç—Ç–æ–º.","–ü–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã –Ω–µ –æ—á–µ–Ω—å —Ö–æ—Ä–æ—à–∏–µ.","–ê –∫–∞–∫ –∂–µ –∏–Ω–∞—á–µ?.","–î–∞, –Ω–æ –µ—Å–ª–∏ —Ç–æ–ª—å–∫–æ —Ç—ã –Ω–µ —Å–º–æ—Ç—Ä–∏—à—å –∞–Ω–∏–º–µ.","–ó–Ω–∞–∫–∏ –≥–æ–≤–æ—Ä—è—Ç - –¥–∞.","–ù–µ –∑–Ω–∞—é.","–ú–æ–π –æ—Ç–≤–µ—Ç - –Ω–µ—Ç.","–í–µ—Å—å–º–∞ —Å–æ–º–Ω–∏—Ç–µ–ª—å–Ω–æ.","–ù–µ –º–æ–≥—É –¥–∞—Ç—å —Ç–æ—á–Ω—ã–π –æ—Ç–≤–µ—Ç.")
	random_karma2 = random.choice(random_karma)
	bot.reply_to(msg, f"üîÆ {random_karma2}", parse_mode="HTML")
	
	
  
def reputation(msg, text):
	""" TODO """

	# –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ–ª—å—à–æ–µ, —Ç–æ –ø—Ä–µ—Ä–≤–∞—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
	if len(text) > 100:
		return

	# –ï—Å–ª–∏ –∫–∞—Ä–º—É –Ω–µ –ø—ã—Ç–∞—é—Ç—Å—è –∏–∑–º–µ–Ω–∏—Ç—å, —Ç–æ –ø—Ä–µ—Ä–≤–∞—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
	how_much_changed = is_karma_changing(text)
	if not how_much_changed:
		return

	# –ü—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –ø–æ–¥–Ω—è—Ç—å –∫–∞—Ä–º—É —Å–∞–º–æ–º—É —Å–µ–±–µ –ø—Ä–µ—Ä–≤–∞—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
	if msg.from_user.id == msg.reply_to_message.from_user.id:
		bot.send_message(msg.chat.id, "–ù–µ–ª—å–∑—è –∏–∑–º–µ–Ω—è—Ç—å –∫–∞—Ä–º—É —Å–∞–º–æ–º—É —Å–µ–±–µ.")
		return

	# –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∫–∞—Ä–º—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–æ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –ø—Ä–æ–º–µ–∂—É—Ç–æ–∫
	if is_karma_abuse(msg):
		return

	if is_karma_freezed(msg):
		return
		
	# –ï—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –∫–∞—Ä–º—ã –≤—Å–µ –∂–µ –º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å: –∏–∑–º–µ–Ω—è–µ–º
	result = sum(how_much_changed)
	if result != 0:
		Limitation.create(
			timer=pw.SQL("current_timestamp"),
			userid=msg.from_user.id,
			chatid=msg.chat.id)
		change_karma(msg.reply_to_message.from_user, msg.chat, result)

	if result > 0:
		res = "–ø–æ–≤—ã—à–µ–Ω–∞ ‚¨ÜÔ∏è"
	elif result < 0:
		res = "–ø–æ–Ω–∏–∂–µ–Ω–∞ ‚¨áÔ∏è"
	else:
		res = "–Ω–µ –∏–∑–º–µ–Ω–µ–Ω–∞"

	user = KarmaUser.select().where(
		(KarmaUser.userid == msg.reply_to_message.from_user.id) &
		(KarmaUser.chatid == msg.chat.id)).get()

	if not user.user_name.isspace():
		name = user.user_name.strip()
	else:
		name = user.user_nick.strip()
		
	if name == "Telegram" or name == "–•–∞–±–ö–∞—Ä–º–∞":
		return

	now_karma = f"–ö–∞—Ä–º–∞ {res}\n{name}: <b>{user.karma}</b>."
	bot.send_message(msg.chat.id, now_karma, parse_mode="HTML")

def reputation_mat(msg, text):
	""" TODO –ø–æ–Ω–∏–∂–µ–Ω–∏–µ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏ –∑–∞ –º–∞—Ç—ã"""
	
	how_much_changed = is_karma_changing_mat(text)
	if not how_much_changed:
		return
	# –ï—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –∫–∞—Ä–º—ã –≤—Å–µ –∂–µ –º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å: –∏–∑–º–µ–Ω—è–µ–º
	result = sum(how_much_changed)
	if result != 0:
		change_karma(msg.from_user, msg.chat, result)
		

@bot.message_handler(content_types=["text"], func=reply_exist)
def changing_karma_text(msg):
	if msg.chat.type == "private":
		return
	reputation(msg, msg.text)
	reputation_mat(msg, msg.text)
	commands(msg, msg.text)

@bot.message_handler(content_types=["sticker"], func=reply_exist)
def changing_karma_sticker(msg):
	if msg.chat.type == "private":
		return
	reputation(msg, msg.sticker.emoji)
	
@bot.channel_post_handler(content_types=["text"])
def channel_post(msg):
	if '–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ' in msg.text:
		bot.forward_message(-1001110839896, msg.chat.id, msg.message_id)

#@bot.message_handler(content_types=['text'])	
#def karma_game(msg):
#	if msg.chat.type == "private":
#		return
				
				
@bot.message_handler(content_types=['dice'])
def send_dice(msg):
	if msg.chat.type == "private":
		return
	if msg.forward_from != None:
		bot.delete_message(msg.chat.id, msg.message_id)
	else:
		try:
			user = select_user(msg.from_user, msg.chat)
			if not user:
				insert_user(msg.from_user, msg.chat)
				bot.delete_message(msg.chat.id, msg.message_id)
		except Exception:
			insert_user(msg.from_user, msg.chat)
			bot.delete_message(msg.chat.id, msg.message_id)
			
		user = select_user(msg.from_user, msg.chat)
		if is_game_abuse(msg):
			return
		if user.is_freezed:
			bot.reply_to(msg, f"–†–∞–∑–º–æ—Ä–æ–∑—å—Ç–µ –∫–∞—Ä–º—É —á—Ç–æ–±—ã –∏–≥—Ä–∞—Ç—å!", parse_mode="HTML")
		else:
			if user.karma > msg.dice.value:
				Limitation.create(
					timer=pw.SQL("current_timestamp"),
					userid=msg.from_user.id,
					chatid=msg.chat.id)
				
				random_karma = ("-","+")
				random_karma2 = random.choice(random_karma)
				
				bot.reply_to(msg, f"–°—ã–≥—Ä–∞–ª –≤ –∫–∞—Ä–º—É {random_karma2}{msg.dice.value}", parse_mode="HTML")
				user = bot.get_chat_member(msg.chat.id, msg.from_user.id)
				if user.status == 'creator':
					change_karma(msg.from_user, msg.chat, f"+{msg.dice.value}")
				else:
					change_karma(msg.from_user, msg.chat, f"{random_karma2}{msg.dice.value}")
			else:
				bot.delete_message(msg.chat.id, msg.message_id)
				
@bot.message_handler(regexp = '^/[A-Za-z]', func=is_my_message)
def delcommand(msg):
	bot.delete_message(msg.chat.id, msg.message_id)
	return

# bot.polling(none_stop=True)


# –î–∞–ª—å–Ω–µ–π—à–∏–π –∫–æ–¥ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏ —É–¥–∞–ª–µ–Ω–∏—è –≤–µ–±—Ö—É–∫–æ–≤
server = Flask(__name__)


@server.route("/bot", methods=['POST'])
def get_message():
	""" TODO """
	decode_json = request.stream.read().decode("utf-8")
	bot.process_new_updates([telebot.types.Update.de_json(decode_json)])
	return "!", 200


@server.route("/")
def webhook_add():
	""" TODO """
	bot.remove_webhook()
	bot.set_webhook(url=config.url)
	return "!", 200

@server.route("/<password>")
def webhook_rem(password):
	""" TODO """
	password_hash = hashlib.md5(bytes(password, encoding="utf-8")).hexdigest()
	if password_hash == "5b4ae01462b2930e129e31636e2fdb68":
		bot.remove_webhook()
		return "Webhook removed", 200
	else:
		return "Invalid password", 200


server.run(host="0.0.0.0", port=int(os.environ.get('PORT', 5000)))
